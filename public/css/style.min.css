@charset "UTF-8";*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}a:link,a:visited{display:inline-block}a,a:hover,a:link,a:visited{color:inherit;text-decoration:none}aside,footer,header,legend,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background:0 0}button,input,select,textarea{font:inherit inherit;color:inherit}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}@font-face{font-family:Helvetica-normal,sans-serif;src:url(../font/HelveticaNeueCyr-Medium.woff2)}@font-face{font-family:Helvetica-bold,sans-serif;src:url(../font/HelveticaNeueCyr-Bold.woff2)}.header__top .toggle,.toggle,.toggle.active{-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.header__top .toggle,.toggle{background:#fff;display:none;width:35px;height:3px;cursor:pointer;position:relative}.toggle.active{background:0 0}.header__top .toggle::after,.header__top .toggle::before,.toggle::after,.toggle::before{background:#fff;content:"";display:block;width:25px;height:3px;position:absolute;top:-10px;right:0;-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.header__top .toggle::after,.toggle::after{width:45px;top:10px}.toggle.active::before{width:35px;-webkit-transform:translateY(10px) rotate(45deg);-ms-transform:translateY(10px) rotate(45deg);transform:translateY(10px) rotate(45deg);opacity:1}.toggle.active::after{width:35px;-webkit-transform:translateY(-10px) rotate(-45deg);-ms-transform:translateY(-10px) rotate(-45deg);transform:translateY(-10px) rotate(-45deg)}.btn{display:block;padding:20px 32px;text-transform:uppercase;font-weight:700;font-size:24px;background:rgba(191,146,126,.78);border-radius:30px}body{font:16px Helvetica-normal,sans-serif;background:url(../img/bg-texture.jpg)}a{display:inline-block}.container{max-width:1340px;margin:0 auto;padding:0 20px;height:100%}.header{background:url(../img/header-bg.jpg) no-repeat center/cover;height:100vh;padding-top:1.2rem}.header__top{position:relative;background:rgba(66,75,57,.5);border-radius:10px;padding:1.2rem 1.8rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:1rem}.header__logo{width:10%;height:auto}.header__logo-link{-webkit-transition:fill .35s ease;-o-transition:fill .35s ease;transition:fill .35s ease}.header__logo-link:hover svg path,.header__logo-link:hover svg rect{fill:#bf927e}.header__menu{font:1.5em Helvetica-bold,sans-serif;text-transform:uppercase;color:#fff;letter-spacing:1px}.header__menu-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__menu-item{margin-right:.2rem;padding:.8rem 1.4rem .45rem;text-align:center;text-shadow:0 4px 4px rgba(0,0,0,.35);font-weight:700}.header__menu-item.active{background:rgba(228,228,228,.5);color:#fff;font-weight:700;border-radius:1.8rem;text-shadow:0 4px 4px rgba(255,255,255,.25)}.header__menu.active{background:rgba(66,75,57,.5);display:block;position:absolute;min-width:220px;max-width:350px;top:70px;right:0;padding:2rem;font-size:2rem;border-radius:10px;z-index:99}.header__menu.active .header__menu-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header__menu.active .header__menu-list .header__menu-item{padding:1rem 1rem .45rem;margin-bottom:.5rem}.header__menu-link,.header__menu-link span{position:relative;overflow:hidden}.header__menu-link span{-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.header__menu-link span .out{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.header__menu-link span .in{position:absolute;left:0;color:rgba(191,146,126,.8);-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}.header__menu-link:hover span .out{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.header__menu-link:hover span .in{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.header-wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:100%}.header__center{-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;text-align:center;margin-top:5rem;margin-bottom:3.75rem}.header__center-logo{width:50%;margin:0 auto 9rem;background:rgba(33,53,35,.23);padding:1rem 2rem}.header__center-info{max-width:41rem;padding:.8rem 1.5rem;margin:0 auto;background:rgba(67,41,26,.24)}.header__center-title{font-size:2.8rem;color:#fff;text-transform:uppercase;margin-bottom:.5rem}.header__center-phone{color:#fff;font-size:2.5rem}.header__bottom{display:-webkit-box;display:-ms-flexbox;display:flex;padding-left:1rem;padding-right:3.8rem;padding-bottom:1.3rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;color:#fff;background:rgba(115,69,69,.5)}.header__bottom .header__bottom-info{width:40%}.header__bottom .header__bottom-info address{font-size:18px;font-weight:500;display:block;margin-bottom:8px}.header__bottom .header__bottom-btn{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header__bottom .header__bottom-contacts{font-size:18px}.header__bottom-info-title,.header__bottom-social-title{text-transform:uppercase;font-weight:500;font-size:20px;padding-top:24px;margin-bottom:5px}.header__bottom-social-title{padding-top:0;font-weight:400;margin-bottom:17px}.header__bottom-social-wrap,.header__bottom-social-wrap .header__bottom-social-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__bottom-social-wrap{gap:13px}.header__bottom-social-wrap .header__bottom-social-item{background:#b18d83;height:56px;width:56px;border-radius:10px;text-align:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@supports (-webkit-appearance:none){body{background-image:url(../img/bg-texture.webp)}.header{background-image:url(../img/header-bg.webp)}}@media screen and (max-width:1300px){.header__menu{font-size:1.2rem}.header__menu-item{padding:.8rem 1rem .45rem}}@media screen and (max-width:1040px){.header__menu{font-size:.8rem}}@media (max-width:1000px){body{font-size:14px}}@media screen and (max-width:990px){.header__top{padding:.95rem 1.5rem;gap:.8rem}.header__top .toggle{min-height:-webkit-fit-content;min-height:-moz-fit-content;min-height:fit-content}.header__menu-item{padding:.6rem .5rem .35rem}.header__bottom{gap:20px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:10px}.header__bottom .header__bottom-btn{position:relative;top:0;left:0;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);margin:0 auto 15px}.header__bottom .header__bottom-info{width:50%}.header__bottom-social-title{text-align:center}}@media screen and (max-width:900px){.header__logo{width:15%}.header__menu.active{top:95px}.header__center{margin-top:3rem}.header__center-logo{width:68%;margin:0 auto 5rem}}@media screen and (max-width:750px){.header__top{padding:.6rem 1rem}.header__menu{font-size:.65rem}}@media (max-width:700px){body{font-size:12px}}@media screen and (max-width:650px){.header__top .toggle{display:block}.header__logo{width:20%}.header__menu{display:none}.header__menu.active{font-size:1.5rem}.header__bottom .header__bottom-info{width:100%;text-align:center}.header__center-title{font-size:2.2rem}.header__center-phone{font-size:1.5rem}.header__center-logo{margin-bottom:60px;width:100%}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */