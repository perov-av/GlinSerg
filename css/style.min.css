@charset "UTF-8";*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}a:link,a:visited{display:inline-block}a,a:hover,a:link,a:visited{color:inherit;text-decoration:none}aside,footer,header,legend,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background:0 0}button,input,select,textarea{font:inherit inherit;color:inherit}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}.toggle,label{cursor:pointer}@font-face{font-family:"DMSans-gs",sans-serif;src:url(../font/DMSans-Regular.woff2) format("woff2");src:local("DMSans-Regular"),url(../font/DMSans-Regular.woff) format("woff"),url(../font/DMSans-Regular.eot?#iefix) format("embedded-opentype"),url(../font/DMSans-Regular.ttf) format("truetype");font-weight:400}@font-face{font-family:"DMSans-gs",sans-serif;src:url(../font/DMSans-Bold.woff2) format("woff2");src:local("DMSans-Bold"),url(../font/DMSans-Bold.woff) format("woff"),url(../font/DMSans-Bold.eot) format("embedded-opentype"),url(../font/DMSans-Bold.ttf) format("truetype");font-weight:700}.toggle{background:#fff;display:none;width:35px;height:3px;position:relative}.toggle,.toggle.active,.toggle::after,.toggle::before{-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.toggle.active{background:0 0}.toggle::after,.toggle::before{background:#fff;content:"";display:block;width:25px;height:3px;position:absolute;top:-10px;right:0}.toggle::after{width:45px;top:10px}.toggle.active::before{width:35px;-webkit-transform:translateY(10px) rotate(45deg);-ms-transform:translateY(10px) rotate(45deg);transform:translateY(10px) rotate(45deg);opacity:1}.toggle.active::after{width:35px;-webkit-transform:translateY(-10px) rotate(-45deg);-ms-transform:translateY(-10px) rotate(-45deg);transform:translateY(-10px) rotate(-45deg)}.btn{display:block;padding:15px 25px;text-transform:uppercase;font-weight:700;font-size:24px;background:#857335;border-radius:40px}body{font:16px/1.6 DMSans-gs,sans-serif}a{display:inline-block}.container{max-width:1240px;margin:0 auto;padding:0 20px}.layer-1,.layer-2,.layer-5,.layer-6,.logo{background-position:center;background-repeat:no-repeat;background-size:cover}.layer-4,.layer-5,.layer-6{pointer-events:none}.header{background:#000;font-weight:900;color:#fff}.logo{width:calc((1vw + 1vh)*12);height:calc((1vw + 1vh)*10);position:absolute;left:50%;top:20%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);z-index:2}.layers{-webkit-perspective:900px;perspective:900px;overflow:hidden}.layers__container{height:100vh;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transform:rotateX(var(--move-y)) rotateY(var(--move-x));transform:rotateX(var(--move-y)) rotateY(var(--move-x));will-change:transform;min-height:500px;-webkit-transition:.8s cubic-bezier(.05,.5,0,1);-o-transition:.8s cubic-bezier(.05,.5,0,1);transition:.8s cubic-bezier(.05,.5,0,1)}.layers__content,.layers__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.layers__item{position:absolute;inset:-5vw;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.layers__content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;gap:calc((1vw + 1vh)*4);padding-top:calc((1vw + 1vh)*10)}.layers__content p{font-size:calc((1vw + 1vh)*1.2);letter-spacing:2px;font-weight:400;font-style:italic}.layer-1{-webkit-transform:translateZ(-60px) scale(1.06);transform:translateZ(-60px) scale(1.06)}.layer-2{-webkit-transform:translateZ(80px) scale(.88);transform:translateZ(80px) scale(.88)}.layer-3{-webkit-transform:translateZ(180px) scale(.8);transform:translateZ(180px) scale(.8)}.layer-4{-webkit-transform:translateZ(190px) scale(.88);transform:translateZ(190px) scale(.88)}.layer-5{-webkit-transform:translateZ(300px) scale(.9);transform:translateZ(300px) scale(.9)}.layer-6{-webkit-transform:translateZ(360px);transform:translateZ(360px)}.layers-btn{font-size:calc((1vw + 1vh)*.8);text-transform:none;letter-spacing:2px;font-weight:400;padding:calc((1vw + 1vh)*.5) calc((1vw + 1vh)*.9)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */