@charset "UTF-8";*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}:active,:focus,a:active,a:focus{outline:0}a:link,a:visited{display:inline-block}a,a:hover,a:link,a:visited{color:inherit;text-decoration:none}aside,footer,header,legend,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background:0 0}button,input,select,textarea{font:inherit inherit;color:inherit}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}@font-face{font-family:Helvetica-normal,sans-serif;src:url(../font/HelveticaNeueCyr-Medium.woff2)}@font-face{font-family:Helvetica-bold,sans-serif;src:url(../font/HelveticaNeueCyr-Bold.woff2)}.header__top .toggle,.toggle,.toggle.active{-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.header__top .toggle,.toggle{background:#fff;display:none;width:35px;height:3px;cursor:pointer;position:relative}.toggle.active{background:0 0}.header__top .toggle::after,.header__top .toggle::before,.toggle::after,.toggle::before{background:#fff;content:"";display:block;width:25px;height:3px;position:absolute;top:-10px;right:0;-webkit-transition:all .4s ease;-o-transition:all .4s ease;transition:all .4s ease}.header__top .toggle::after,.toggle::after{width:45px;top:10px}.toggle.active::before{width:35px;-webkit-transform:translateY(10px) rotate(45deg);-ms-transform:translateY(10px) rotate(45deg);transform:translateY(10px) rotate(45deg);opacity:1}.toggle.active::after{width:35px;-webkit-transform:translateY(-10px) rotate(-45deg);-ms-transform:translateY(-10px) rotate(-45deg);transform:translateY(-10px) rotate(-45deg)}.header{background:url(../img/header-bg.jpg) no-repeat center/cover;height:100vh;padding-top:1.2rem}.header__top{background:rgba(66,75,57,.5);border-radius:10px;padding:1.2rem 1.8rem;min-height:3rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:1rem}.header__logo{width:10%;height:auto}.header__logo-link{-webkit-transition:fill .35s ease;-o-transition:fill .35s ease;transition:fill .35s ease}.header__logo-link:hover svg path,.header__logo-link:hover svg rect{fill:#bf927e}.header__menu{font:1.5em Helvetica-bold,sans-serif;text-transform:uppercase;color:#fff;letter-spacing:1px}.header__menu-list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__menu-item{margin-right:.2rem;padding:.8rem 1.4rem .45rem;text-align:center;text-shadow:0 4px 4px rgba(0,0,0,.35);font-weight:700}.header__menu-item.active{background:rgba(228,228,228,.8);color:rgba(191,146,126,.8);font-weight:700;border-radius:1.8rem;text-shadow:0 4px 4px rgba(255,255,255,.25)}.header__menu-link,.header__menu-link span{position:relative;overflow:hidden}.header__menu-link span{-webkit-transition:.5s;-o-transition:.5s;transition:.5s}.header__menu-link span .out{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex}.header__menu-link span .in{position:absolute;left:0;color:#bf927e;-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}.header__menu-link:hover span .out{-webkit-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%)}.header__menu-link:hover span .in{-webkit-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0)}.test-footer{color:#f0f8ff;font-size:45px}body{font:16px/16px Helvetica-normal,sans-serif;background:url(../img/bg-texture.jpg)}a{display:inline-block}.container{max-width:1340px;margin:0 auto;padding:0 20px}@supports (-webkit-appearance:none){.header{background-image:url(../img/header-bg.webp)}body{background-image:url(../img/bg-texture.webp)}}@media (max-width:1300px){.header__menu{font-size:1.2rem}.header__menu-item{padding:.8rem 1rem .45rem}}@media (max-width:1040px){.header__menu{font-size:.8rem}}@media (max-width:1000px){body{font-size:14px}}@media (max-width:990px){.header__top{padding:.95rem 1.5rem;gap:.8rem;min-height:-webkit-fit-content;min-height:-moz-fit-content;min-height:fit-content}.header__menu-item{padding:.6rem .5rem .35rem}}@media (max-width:900px){.header__logo{width:15%}}@media (max-width:750px){.header__top{padding:.6rem 1rem}.header__menu{font-size:.65rem}}@media (max-width:700px){h1,h2{display:none}body{font-size:12px}}@media (max-width:650px){.header__top .toggle{display:block}.header__logo{width:20%}.header__menu{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */